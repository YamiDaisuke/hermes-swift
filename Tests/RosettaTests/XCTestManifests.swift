#if !canImport(ObjectiveC)
import XCTest

extension BytecodeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BytecodeTests = [
        ("testInstructionsDescription", testInstructionsDescription),
        ("testMake", testMake),
        ("testReadOperands", testReadOperands),
        ("testToInt", testToInt),
    ]
}

extension CompilerScopesTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CompilerScopesTests = [
        ("testCompilerScopes", testCompilerScopes),
    ]
}

extension LexerTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LexerTest = [
        ("testReadChar", testReadChar),
        ("testReadFileString", testReadFileString),
        ("testReadStringline", testReadStringline),
    ]
}

extension ReadFileTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ReadFileTests = [
        ("testStreamReader", testStreamReader),
    ]
}

extension StringExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringExtensionsTests = [
        ("testIntSubscripts", testIntSubscripts),
        ("testPerformanceExample", testPerformanceExample),
    ]
}

extension SymbolTableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SymbolTableTests = [
        ("testDefine", testDefine),
        ("testResolveBuiltins", testResolveBuiltins),
        ("testResolveGlobal", testResolveGlobal),
        ("testResolveLocal", testResolveLocal),
        ("testResolveNestedLocal", testResolveNestedLocal),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(BytecodeTests.__allTests__BytecodeTests),
        testCase(CompilerScopesTests.__allTests__CompilerScopesTests),
        testCase(LexerTest.__allTests__LexerTest),
        testCase(ReadFileTests.__allTests__ReadFileTests),
        testCase(StringExtensionsTests.__allTests__StringExtensionsTests),
        testCase(SymbolTableTests.__allTests__SymbolTableTests),
    ]
}
#endif
